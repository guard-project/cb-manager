consumes:
- application/json
definitions:
  Agent_Catalog:
    properties:
      actions:
        description: Action properties.
        items:
          $ref: '#/definitions/Agent_Catalog_Action'
        type: array
      deployment_source:
        description: Link to the deployment sources
        example: https://www.example.com/k8s-artefact.yaml
        items:
          type: string
        type: array
      description:
        description: Short description of the agent.
        example: Collect system metrics from execution environments.
        type: string
      id:
        description: Id of the agent in the catalog.
        example: filebeat
        type: string
      parameters:
        description: Parameter properties.
        items:
          $ref: '#/definitions/Agent_Catalog_Parameter'
        type: array
      resources:
        description: Resource properties.
        items:
          $ref: '#/definitions/Agent_Catalog_Resource'
        type: array
    required:
    - id
    type: object
  Agent_Catalog_Action:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/Agent_Catalog_Action_Config'
        description: Action config.
      description:
        description: Short description of the agent actions.
        example: Start the execution of the agent.
        type: string
      id:
        description: Action name
        example: start
        type: string
      status:
        description: Update the status the of the agent-instance if the command is
          executed correctly.
        enum: &id001
        - started
        - stopped
        - unknown
        example: started
        type: string
    required:
    - config
    - id
    type: object
  Agent_Catalog_Action_Config:
    properties:
      args:
        description: Action command argument
        example: -v
        items:
          type: string
        type: array
      cmd:
        description: Action command.
        example: service filebeat start
        type: string
      daemon:
        description: Execute the command as daemon.
        example: true
        type: boolean
    required:
    - cmd
    type: object
  Agent_Catalog_Parameter:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/Agent_Catalog_Parameter_Config'
        description: Parameter configuration.
      description:
        description: Short description of the parameter.
        example: Enable the agent.
        type: string
      example:
        description: Example of parameter value.
        example: 10s
      id:
        description: Parameter id.
        example: log-period
        type: string
      list:
        description: Indicate if the parameter can have multiple values.
        example: true
        type: boolean
      type:
        description: Parameter type.
        enum: &id002
        - binary
        - boolean
        - choice
        - integer
        - number
        - time-duration
        - string
        example: binary
        type: string
      values:
        description: Possible values if the parameter type is choice.
        example: mysql
        items:
          type: string
        type: array
    required:
    - config
    - id
    - type
    type: object
  Agent_Catalog_Parameter_Config:
    properties:
      path:
        description: Path of the parameter value in the file
        example: enabled
        items:
          type: string
        type: array
      schema:
        description: Schema of the parameter file
        enum:
        - properties
        - json
        - xml
        - yaml
        example: properties
        type: string
      source:
        description: Path of the source parameter file
        example: /usr/share/filebeat/filebeat.yml
        type: string
    required:
    - path
    - schema
    - source
    type: object
  Agent_Catalog_Resource:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/Agent_Catalog_Resource_Config'
        description: Resource configuration.
      description:
        description: Short description of the resource.
        example: Filebeat configuration file.
        type: string
      id:
        description: Resource id.
        example: filebeat-config
        type: string
    required:
    - config
    - id
    type: object
  Agent_Catalog_Resource_Config:
    properties:
      path:
        description: File path.
        example: /usr/share/filebeat/filebeat.yml
        items:
          type: string
        type: array
    required:
    - path
    type: object
  Agent_Instance:
    properties:
      agent_catalog_id:
        description: Id of the agent in the catalog.
        example: filebeat
        type: string
      description:
        description: Short description of the agent installed in the execution environment.
        example: Collect system metrics from execution environments.
        type: string
      exec_env_id:
        description: Id of the execution environment where the agent instance is installed.
        example: apache
        type: string
      id:
        description: Id of the agent instance installed in an execution environment.
        example: filebeat@apache
        type: string
      operations:
        description: List of agent instance operations.
        items:
          $ref: '#/definitions/Agent_Instance_Operation'
        type: array
      status:
        description: Status of the agent.
        enum: *id001
        example: started
        type: string
    required:
    - agent_catalog_id
    - exec_env_id
    - id
    - status
    type: object
  Agent_Instance_Action:
    properties:
      id:
        description: Action id.
        example: list
        type: string
      output_format:
        description: Output format for stdout and stderr result of action execution.
        enum:
        - plain
        - lines
        - json
        example: lines
        type: string
    required:
    - id
    type: object
  Agent_Instance_Operation:
    properties:
      actions:
        description: List of agent instance actions.
        items:
          $ref: '#/definitions/Agent_Instance_Action'
        type: array
      parameters:
        description: List of agent instance parameters.
        items:
          $ref: '#/definitions/Agent_Instance_Parameter'
        type: array
      resources:
        description: List of agent instance resources.
        items:
          $ref: '#/definitions/Agent_Instance_Resource'
        type: array
    type: object
  Agent_Instance_Parameter:
    properties:
      id:
        description: Parameter id.
        example: period
        type: string
    required:
    - id
    type: object
  Agent_Instance_Resource:
    properties:
      content:
        description: Resource content.
        example: 'period: 10s'
        type: string
      id:
        description: Resource id.
        example: filebeat-config
        type: string
    required:
    - content
    - id
    type: object
  Algorithm_Catalog:
    properties:
      description:
        description: Short description of the algorithm.
        example: Predict DDoS attacks.
        type: string
      encoding_scheme:
        description: Encoding scheme used to store the binary data
        example: base64
        type: string
      id:
        description: Id of the algorithm in the catalog.
        example: ddos-prediction
        type: string
      parameters:
        description: Parameter properties.
        items:
          $ref: '#/definitions/Algorithm_Catalog_Parameter'
        type: array
    required:
    - id
    type: object
  Algorithm_Catalog_Parameter:
    properties:
      description:
        description: Short description of the parameter.
        example: Enable the algorithm.
        type: string
      example:
        description: Example of parameter value.
        example: 10s
      id:
        description: Parameter id.
        example: frequency
        type: string
      list:
        description: Indicate if the parameter can have multiple values.
        example: true
        type: boolean
      type:
        description: Parameter type.
        enum:
        - binary
        - boolean
        - choice
        - integer
        - number
        - time-duration
        - string
        example: binary
        type: string
      values:
        description: Possible values if the parameter type is choice.
        example: mysql
        items:
          type: string
        type: array
    required:
    - id
    - type
    type: object
  Algorithm_Instance:
    properties:
      algorithm_catalog_id:
        description: Id of the algorithm in the catalog.
        example: ddos-predictor
        type: string
      description:
        description: Short description of the algorithm installed in the execution
          environment.
        example: Collect system metrics from execution environments.
        type: string
      id:
        description: Id of the algorithm instance.
        example: ddos-predictor-1
        type: string
      operations:
        description: List of algorithm instance operations.
        items:
          $ref: '#/definitions/Algorithm_Instance_Operation'
        type: array
    required:
    - algorithm_catalog_id
    - id
    type: object
  Algorithm_Instance_Operation:
    properties:
      parameters:
        description: List of algorithm instance parameters.
        items:
          $ref: '#/definitions/Algorithm_Instance_Parameter'
        type: array
    type: object
  Algorithm_Instance_Parameter:
    properties:
      id:
        description: Parameter id.
        example: period
        type: string
    required:
    - id
    type: object
  Bad_Request_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 400
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Bad Request
    required:
    - message
    type: object
  Connection:
    properties:
      description:
        description: Short description of the connection.
        example: Added to this network for debug purposes.
        type: string
      exec_env_id:
        description: Id of the connected execution environment.
        example: apache
        type: string
      id:
        description: Id of connection.
        example: conn-1
        type: string
      network_link_id:
        description: Id of the connected network link.
        example: net-link-1
        type: string
    required:
    - exec_env_id
    - id
    - network_link_id
    type: object
  Created_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 201
      error:
        default: false
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Created
    required:
    - message
    type: object
  Data:
    properties:
      agent_instance_id:
        description: Id of the agent instance in the execution environment that collected
          the data
        example: filebeat@apache
        type: string
      ebpf_program_instance_id:
        description: "Id of the eBPF program instance in the execution environment\n\
          \                                                  that collected the data"
        example: packet-capture@apache
        type: string
      id:
        description: Id of the data.
        example: BXrHRn5RPU55Qh9JwMZn
        type: string
      timestamp_agent:
        description: Timestamp when the agent instance collected the data
        example: 2019/02/14 15:23:30
        format: date-time
        type: string
      timestamp_event:
        description: Timestamp of the event related to the collected data
        example: 2019/02/14 15:23:30
        format: date-time
        type: string
    required:
    - id
    type: object
  Event:
    properties:
      id:
        description: Id of the event.
        example: BXrHRn5RPU55Qh9JwMZn
        type: string
    required:
    - id
    type: object
  Exception_Response:
    properties:
      filename:
        description: Filename where the exception is raised.
        example: lib/connection.py
        type: string
      line:
        description: Line where the exception is raised.
        example: 80
        type: integer
      reason:
        description: Exception reason.
        example: Connection timeout
    required:
    - filename
    - line
    - reason
    type: object
  Exec_Env:
    properties:
      description:
        description: Short description of the execution environment,
        example: Apache HTTP Web Server.
        type: string
      enabled:
        description: Indicate if the execution environment is enabled or not
        example: 'Yes'
        type: boolean
      hostname:
        description: Hostname of the execution environment.
        example: 192.168.1.2
        type: string
      id:
        description: Id of the execution environment.
        example: apache
        type: string
      lcp:
        allOf:
        - $ref: '#/definitions/LCP'
        description: Data related to the LCP.
      type_id:
        description: Id of the execution environment type.
        example: vm
        type: string
    required:
    - enabled
    - hostname
    - id
    - type_id
    type: object
  Exec_Env_Type:
    properties:
      description:
        description: Short description of the type.
        example: Linux container.
        type: string
      id:
        description: Id of the execution environment type.
        example: vm
        type: string
      name:
        description: Name of the execution environment.
        example: Virtual Machine
        type: string
    required:
    - id
    - name
    type: object
  Internal_Server_Error_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 500
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Internal Server Error
    required:
    - message
    type: object
  LCP:
    properties:
      endpoint:
        description: URL Endpoint to connect with the LCP.
        example: lcp
        type: string
      https:
        description: Communication with the LCP using HTTPS.
        example: true
        type: boolean
      last_heartbeat:
        description: Timestamp of the expiration of the API access configuration.
        example: 2019/02/14 15:23:33
        format: date-time
        type: string
      port:
        description: TCP port number of LCP in the execution environment.
        example: 5000
        type: integer
      started:
        description: Timestamp when the LCP is started.
        example: 2019/02/14 15:23:30
        format: date-time
        type: string
    required:
    - https
    - port
    type: object
  Network_Link:
    properties:
      description:
        description: Short description of the network link,
        example: Allow communication between front-end and back-end services.
        type: string
      id:
        description: Id of the network link.
        example: net-link-1
        type: string
      type_id:
        description: Id of the network link type.
        example: pnt2pnt
        type: string
    required:
    - id
    - type_id
    type: object
  Network_Link_Type:
    properties:
      description:
        description: Short description of the network link type,
        example: Communications connection between two communication endpoints.
        type: string
      id:
        description: Id of the network link type.
        example: pnt2pnt
        type: string
      name:
        description: Name of the network link type.
        example: Point to point
        type: string
    required:
    - id
    - name
    type: object
  No_Content_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 204
      error:
        default: false
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: No Content
    required:
    - message
    type: object
  Not_Acceptable_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 406
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Not Acceptable
    required:
    - message
    type: object
  Not_Found_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 404
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Not Found
    required:
    - message
    type: object
  Not_Modified_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 304
      error:
        default: false
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Not Modified
    required:
    - message
    type: object
  Ok_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 200
      error:
        default: false
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: OK
    required:
    - message
    type: object
  Pipeline:
    properties:
      created_at:
        description: Date of creation of the pipeline in Unix timestamp format.
        example: 1617278285
        format: date-time
        type: string
      id:
        description: Id of the pipeline.
        example: BXrHRn5RPU55Qh9JwMZn
        type: string
      name:
        description: Used by the UI to create a new pipeline.
        example: test pipeline guard-vdpi ud
        type: string
      status:
        description: Pipeline status.
        example: started
        type: string
      updated_at:
        description: Date of last update of the pipeline in Unix timestamp format.
        example: 1617278285
        format: date-time
        type: string
      user:
        description: User/Entity owner/manager/responsible of the pipeline.
        example: Minds & Sparks
        type: string
    required:
    - created_at
    - id
    - status
    type: object
  Query_Request:
    properties:
      force:
        description: "Force the execution of the request even there are some errors\n\
          \                                   (example: delete a inconstent entries)."
        example: true
        type: boolean
      limit:
        allOf:
        - $ref: '#/definitions/Query_Request_Limit'
        description: Limit the number of items to return.
      order:
        description: Order the filtered items.
        items:
          $ref: '#/definitions/Query_Request_Order'
        type: array
      select:
        description: Fields to return.
        example: id
        items:
          type: string
        type: array
      where:
        allOf:
        - $ref: '#/definitions/Query_Request_Clause'
        description: Filter the items based on different conditions.
    type: object
  Query_Request_Clause:
    properties:
      and:
        description: All the clause has to be satisfied.
        items:
          $ref: '#/definitions/Query_Request_Clause'
        type: array
      equals:
        allOf:
        - $ref: '#/definitions/Query_Request_Filter'
        description: The target field must be equal to the expr value.
      gt:
        allOf:
        - $ref: '#/definitions/Query_Request_Filter'
        description: The target field must be greater to the expr value.
      gte:
        allOf:
        - $ref: '#/definitions/Query_Request_Filter'
        description: The target field must be greater or equal to the expr value.
      lt:
        allOf:
        - $ref: '#/definitions/Query_Request_Filter'
        description: The target field must be lower than the expr value.
      lte:
        allOf:
        - $ref: '#/definitions/Query_Request_Filter'
        description: The target field must be lower or equal to the expr value.
      not:
        allOf:
        - $ref: '#/definitions/Query_Request_Clause'
        description: The clause has to be not satisfied.
      or:
        description: At least the clause has to be satisfied.
        items:
          $ref: '#/definitions/Query_Request_Clause'
        type: array
      reg_exp:
        allOf:
        - $ref: '#/definitions/Query_Request_Filter'
        description: The target field must be satisfy the regular expression in expr.
      wildcard:
        allOf:
        - $ref: '#/definitions/Query_Request_Filter'
        description: The target field must be satisfy the wildcard in expr.
    type: object
  Query_Request_Filter:
    properties:
      expr:
        description: The expression to compare to the field.
        example: apache
        type: string
      target:
        description: The field to compare.
        example: id
        type: string
    required:
    - expr
    - target
    type: object
  Query_Request_Limit:
    properties:
      from:
        description: Started index of the items to return.
        example: 1
        type: integer
      to:
        description: Ended index of the items to return.
        example: 5
        type: integer
    type: object
  Query_Request_Order:
    properties:
      mode:
        description: Order mode.
        enum:
        - asc
        - desc
        example: asc
        type: string
      target:
        description: The field to compare.
        example: name
        type: string
    required:
    - mode
    - target
    type: object
  Reset_Content_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 205
      error:
        default: false
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Reset Content
    required:
    - message
    type: object
  Unauthorized_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 401
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Unauthorized
    required:
    - message
    type: object
  Unprocessable_Entity_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 422
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Unprocessable Entity
    required:
    - message
    type: object
  Unsupported_Media_Type_Response:
    properties:
      code:
        default: !!python/object/apply:http.HTTPStatus
        - 415
      error:
        default: true
      exception:
        allOf:
        - $ref: '#/definitions/Exception_Response'
        description: Message of the occurred exception.
      message:
        description: Human readable message that describes the status of the operation.
        example: 'Request not valid: two ids provided.'
        type: string
      status:
        default: Unsupported Media Type
    required:
    - message
    type: object
  eBPF_Program_Catalog:
    properties:
      config:
        $ref: '#/definitions/eBPF_Program_Catalog_Config'
      description:
        description: Description of eBPF program.
        example: "Transparent service to capture packets flowing through the interface\
          \ it\n                                 is attached to, apply filters and\
          \ obtain capture in .pcap format."
        type: string
      id:
        description: Id of the eBPF_Program_ in the catalog.
        example: packet-capture
        type: string
      parameters:
        items:
          $ref: '#/definitions/eBPF_Program_Catalog_Parameter'
        type: array
    required:
    - config
    - id
    type: object
  eBPF_Program_Catalog_Config:
    properties:
      code:
        description: Code of the eBPF program.
        items:
          type: string
        type: array
      metrics:
        description: eBPF program metrics.
        items:
          $ref: '#/definitions/eBPF_Program_Catalog_Config_Metric'
        type: array
    required:
    - code
    type: object
  eBPF_Program_Catalog_Config_Metric:
    properties:
      map-name:
        description: Mapping value in the code.
        example: PKT_COUNTER
        type: string
      name:
        description: Metric name.
        example: packets_total
        type: string
      open-metrics-metadata:
        allOf:
        - $ref: '#/definitions/eBPF_Program_Catalog_Config_Metric_Open_Metrics_Metadata'
        description: Open Metrics Metadata.
    required:
    - map-name
    - name
    type: object
  eBPF_Program_Catalog_Config_Metric_Open_Metrics_Metadata:
    properties:
      help:
        description: Metric help.
        example: This metric represents the number of packets that has travelled trough
          this probe.
        type: string
      labels:
        description: Labels of Open Metrics Metadata.
        items:
          $ref: '#/definitions/eBPF_Program_Catalog_Config_Metric_Open_Metrics_Metadata_Label'
        type: array
      type:
        description: Metric type.
        example: counter
        type: string
    required:
    - type
    type: object
  eBPF_Program_Catalog_Config_Metric_Open_Metrics_Metadata_Label:
    properties:
      name:
        description: Label name.
        example: IP_PROTO
        type: string
      value:
        description: Label value.
        example: UDP
        type: string
    required:
    - name
    - value
    type: object
  eBPF_Program_Catalog_Parameter:
    properties:
      description:
        description: Short description of the parameter.
        example: Network Interface to attach.
        type: string
      example:
        description: Example of parameter value.
        example: eno0
      id:
        description: Parameter id.
        example: interface
        type: string
      list:
        description: Indicate if the parameter can have multiple values.
        example: true
        type: boolean
      type:
        description: Parameter type.
        enum: *id002
        example: integer
        type: string
      values:
        description: Possible values if the parameter type is choice.
        example: 'yes'
        items:
          type: string
        type: array
    required:
    - id
    - type
    type: object
  eBPF_Program_Instance:
    properties:
      description:
        description: Short description of the agent installed in the execution environment.
        example: Collect system metrics from Apache HTTP Web Server.
        type: string
      ebpf_program_catalog_id:
        description: Id of the agent in the catalog.
        example: packet-capture
        type: string
      exec_env_id:
        description: Id of the execution environment where the eBPF program instance
          is installed
        example: apache
        type: string
      id:
        description: Id of the eBPF program installed in an execution environment.
        example: packet-capture@apache
        type: string
      parameters:
        description: List of eBPF program instance parameters.
        items:
          $ref: '#/definitions/eBPF_Program_Instance_Parameter'
        type: array
    required:
    - ebpf_program_catalog_id
    - exec_env_id
    - id
    type: object
  eBPF_Program_Instance_Parameter:
    properties:
      id:
        description: Parameter id.
        example: interface
        type: string
      timestamp:
        description: Timestamp of the last time the parameter was set.
        format: date-time
        type: string
    required:
    - id
    type: object
info:
  title: Context Broker Manager
  version: 1.0.4
paths:
  /catalog/agent/:
    delete:
      description: Delete agent catalogs filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Agent catalogs correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Agent catalogs based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more agent catalogs based on
            the request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent catalog Delete (Multiple).
      tags:
      - agent-catalog
    get:
      description: Get the list of agent catalogs filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of agent catalogs filtered by the query in the request
            body.
          schema:
            items:
              $ref: '#/definitions/Agent_Catalog'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Agent catalog based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get agent catalogs with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: agent catalog Read (Multiple).
      tags:
      - agent-catalog
    post:
      description: Create new agent catalogs.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Agent_Catalog'
          type: array
      responses:
        '201':
          description: Agent catalog correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create agent catalogs based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more agent catalogs based on
            the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent catalog Creation (Multiple)
      tags:
      - agent-catalog
    put:
      description: Update agent catalogs.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Agent_Catalog'
          type: array
      responses:
        '200':
          description: All Agent catalogs correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update agent catalogs based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more agent catalogs not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more agent catalogs based on
            the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent catalog Update (Multiple).
      tags:
      - agent-catalog
  /catalog/agent/{id}:
    delete:
      description: Delete the agent catalog with the given `id` and filtered by the
        query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Agent catalog with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Agent catalog with the given `id` and based on the request
            query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the agent catalog with the given `id`
            and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent catalog Delete (Single).
      tags:
      - agent-catalog
    get:
      description: Get the agent catalog with the given `id` and filtered by the query
        in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Agent catalog with the given `id` and filtered by the query
            in the request body.
          schema:
            items:
              $ref: '#/definitions/Agent_Catalog'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Agent catalog based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get agent catalogs with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent catalog Read (Single).
      tags:
      - agent-catalog
    post:
      description: Create a new agent catalog with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Agent_Catalog'
          type: array
      responses:
        '201':
          description: Agent catalog with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the agent catalog with the given `id`
            and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the agent catalog with the given `id`
            and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent catalog Create (Single).
      tags:
      - agent-catalog
    put:
      description: Update the agent catalog with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Agent_Catalog'
          type: array
      responses:
        '200':
          description: Agent catalog with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update agent catalogs with the given `id` and
            based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the agent catalog with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the agent catalog with the given `id`
            and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent catalog Update (Single).
      tags:
      - agent-catalog
  /instance/agent/:
    delete:
      description: Delete agent instances filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Agent instances correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Agent instances based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more agent instances based on
            the request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent instance Delete (Multiple).
      tags:
      - agent-instance
    get:
      description: Get the list of agent instances filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of agent instances filtered by the query in the request
            body.
          schema:
            items:
              $ref: '#/definitions/Agent_Instance'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Agent instance based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get agent instances with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: agent instance Read (Multiple).
      tags:
      - agent-instance
    post:
      description: Create new agent instances.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Agent_Instance'
          type: array
      responses:
        '201':
          description: Agent instance correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create agent instances based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more agent instances based on
            the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent instance Creation (Multiple)
      tags:
      - agent-instance
    put:
      description: Update agent instances.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Agent_Instance'
          type: array
      responses:
        '200':
          description: All Agent instances correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update agent instances based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more agent instances not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more agent instances based on
            the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent instance Update (Multiple).
      tags:
      - agent-instance
  /instance/agent/{id}:
    delete:
      description: Delete the agent instance with the given `id` and filtered by the
        query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Agent instance with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Agent instance with the given `id` and based on the request
            query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the agent instance with the given `id`
            and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent instance Delete (Single).
      tags:
      - agent-instance
    get:
      description: Get the agent instance with the given `id` and filtered by the
        query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Agent instance with the given `id` and filtered by the query
            in the request body.
          schema:
            items:
              $ref: '#/definitions/Agent_Instance'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Agent instance based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get agent instances with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent instance Read (Single).
      tags:
      - agent-instance
    post:
      description: Create a new agent instance with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Agent_Instance'
          type: array
      responses:
        '201':
          description: Agent instance with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the agent instance with the given `id`
            and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the agent instance with the given `id`
            and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent instance Create (Single).
      tags:
      - agent-instance
    put:
      description: Update the agent instance with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Agent_Instance'
          type: array
      responses:
        '200':
          description: Agent instance with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update agent instances with the given `id` and
            based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the agent instance with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the agent instance with the given `id`
            and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Agent instance Update (Single).
      tags:
      - agent-instance
  /catalog/algorithm/:
    delete:
      description: Delete algorithm catalogs filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Algorithm catalogs correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Algorithm catalogs based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more algorithm catalogs based
            on the request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm catalog Delete (Multiple).
      tags:
      - algorithm-catalog
    get:
      description: Get the list of algorithm catalogs filtered by the query in the
        request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of algorithm catalogs filtered by the query in the request
            body.
          schema:
            items:
              $ref: '#/definitions/Algorithm_Catalog'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Algorithm catalog based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get algorithm catalogs with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: algorithm catalog Read (Multiple).
      tags:
      - algorithm-catalog
    post:
      description: Create new algorithm catalogs.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Algorithm_Catalog'
          type: array
      responses:
        '201':
          description: Algorithm catalog correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create algorithm catalogs based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more algorithm catalogs based
            on the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm catalog Creation (Multiple)
      tags:
      - algorithm-catalog
    put:
      description: Update algorithm catalogs.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Algorithm_Catalog'
          type: array
      responses:
        '200':
          description: All Algorithm catalogs correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update algorithm catalogs based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more algorithm catalogs not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more algorithm catalogs based
            on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm catalog Update (Multiple).
      tags:
      - algorithm-catalog
  /catalog/algorithm/{id}:
    delete:
      description: Delete the algorithm catalog with the given `id` and filtered by
        the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Algorithm catalog with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Algorithm catalog with the given `id` and based on the request
            query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the algorithm catalog with the given
            `id` and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm catalog Delete (Single).
      tags:
      - algorithm-catalog
    get:
      description: Get the algorithm catalog with the given `id` and filtered by the
        query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Algorithm catalog with the given `id` and filtered by the query
            in the request body.
          schema:
            items:
              $ref: '#/definitions/Algorithm_Catalog'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Algorithm catalog based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get algorithm catalogs with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm catalog Read (Single).
      tags:
      - algorithm-catalog
    post:
      description: Create a new algorithm catalog with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Algorithm_Catalog'
          type: array
      responses:
        '201':
          description: Algorithm catalog with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the algorithm catalog with the given `id`
            and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the algorithm catalog with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm catalog Create (Single).
      tags:
      - algorithm-catalog
    put:
      description: Update the algorithm catalog with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Algorithm_Catalog'
          type: array
      responses:
        '200':
          description: Algorithm catalog with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update algorithm catalogs with the given `id`
            and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the algorithm catalog with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the algorithm catalog with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm catalog Update (Single).
      tags:
      - algorithm-catalog
  /instance/algorithm/:
    delete:
      description: Delete algorithm instances filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Algorithm instances correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Algorithm instances based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more algorithm instances based
            on the request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm instance Delete (Multiple).
      tags:
      - algorithm-instance
    get:
      description: Get the list of algorithm instances filtered by the query in the
        request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of algorithm instances filtered by the query in the request
            body.
          schema:
            items:
              $ref: '#/definitions/Algorithm_Instance'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Algorithm instance based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get algorithm instances with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: algorithm instance Read (Multiple).
      tags:
      - algorithm-instance
    post:
      description: Create new algorithm instances.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Algorithm_Instance'
          type: array
      responses:
        '201':
          description: Algorithm instance correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create algorithm instances based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more algorithm instances based
            on the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm instance Creation (Multiple)
      tags:
      - algorithm-instance
    put:
      description: Update algorithm instances.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Algorithm_Instance'
          type: array
      responses:
        '200':
          description: All Algorithm instances correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update algorithm instances based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more algorithm instances not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more algorithm instances based
            on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm instance Update (Multiple).
      tags:
      - algorithm-instance
  /instance/algorithm/{id}:
    delete:
      description: Delete the algorithm instance with the given `id` and filtered
        by the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Algorithm instance with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Algorithm instance with the given `id` and based on the request
            query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the algorithm instance with the given
            `id` and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm instance Delete (Single).
      tags:
      - algorithm-instance
    get:
      description: Get the algorithm instance with the given `id` and filtered by
        the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Algorithm instance with the given `id` and filtered by the
            query in the request body.
          schema:
            items:
              $ref: '#/definitions/Algorithm_Instance'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Algorithm instance based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get algorithm instances with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm instance Read (Single).
      tags:
      - algorithm-instance
    post:
      description: Create a new algorithm instance with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Algorithm_Instance'
          type: array
      responses:
        '201':
          description: Algorithm instance with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the algorithm instance with the given
            `id` and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the algorithm instance with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm instance Create (Single).
      tags:
      - algorithm-instance
    put:
      description: Update the algorithm instance with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Algorithm_Instance'
          type: array
      responses:
        '200':
          description: Algorithm instance with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update algorithm instances with the given `id`
            and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the algorithm instance with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the algorithm instance with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Algorithm instance Update (Single).
      tags:
      - algorithm-instance
  /connection/:
    delete:
      description: Delete connections filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Connections correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Connections based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more connections based on the
            request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Connection Delete (Multiple).
      tags:
      - connection
    get:
      description: Get the list of connections filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of connections filtered by the query in the request body.
          schema:
            items:
              $ref: '#/definitions/Connection'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Connection based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get connections with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: connection Read (Multiple).
      tags:
      - connection
    post:
      description: Create new connections.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Connection'
          type: array
      responses:
        '201':
          description: Connection correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create connections based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more connections based on the
            request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Connection Creation (Multiple)
      tags:
      - connection
    put:
      description: Update connections.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Connection'
          type: array
      responses:
        '200':
          description: All Connections correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update connections based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more connections not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more connections based on the
            request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Connection Update (Multiple).
      tags:
      - connection
  /connection/{id}:
    delete:
      description: Delete the connection with the given `id` and filtered by the query
        in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Connection with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Connection with the given `id` and based on the request query
            not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the connection with the given `id` and
            based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Connection Delete (Single).
      tags:
      - connection
    get:
      description: Get the connection with the given `id` and filtered by the query
        in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Connection with the given `id` and filtered by the query in
            the request body.
          schema:
            items:
              $ref: '#/definitions/Connection'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Connection based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get connections with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Connection Read (Single).
      tags:
      - connection
    post:
      description: Create a new connection with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Connection'
          type: array
      responses:
        '201':
          description: Connection with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the connection with the given `id` and
            based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the connection with the given `id` and
            based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Connection Create (Single).
      tags:
      - connection
    put:
      description: Update the connection with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Connection'
          type: array
      responses:
        '200':
          description: Connection with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update connections with the given `id` and based
            on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the connection with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the connection with the given `id` and
            based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Connection Update (Single).
      tags:
      - connection
  /dashboard:
    get: {}
  /dashboard/{part}/{resource}:
    get: {}
  /data/:
    delete:
      description: Delete data filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Data correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Data based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more data based on the request
            query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Data Delete (Multiple).
      tags:
      - data
    get:
      description: Get the list of data filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of data filtered by the query in the request body.
          schema:
            items:
              $ref: '#/definitions/Data'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Data based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get data with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: data Read (Multiple).
      tags:
      - data
    post:
      description: Create new data.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Data'
          type: array
      responses:
        '201':
          description: Data correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create data based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more data based on the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Data Creation (Multiple)
      tags:
      - data
    put:
      description: Update data.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Data'
          type: array
      responses:
        '200':
          description: All Data correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update data based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more data not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more data based on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Data Update (Multiple).
      tags:
      - data
  /data/{id}:
    delete:
      description: Delete the data with the given `id` and filtered by the query in
        the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Data with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Data with the given `id` and based on the request query not
            found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the data with the given `id` and based
            on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Data Delete (Single).
      tags:
      - data
    get:
      description: Get the data with the given `id` and filtered by the query in the
        request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Data with the given `id` and filtered by the query in the request
            body.
          schema:
            items:
              $ref: '#/definitions/Data'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Data based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get data with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Data Read (Single).
      tags:
      - data
    post:
      description: Create a new data with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Data'
          type: array
      responses:
        '201':
          description: Data with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the data with the given `id` and based
            on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the data with the given `id` and based
            on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Data Create (Single).
      tags:
      - data
    put:
      description: Update the data with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Data'
          type: array
      responses:
        '200':
          description: Data with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update data with the given `id` and based on
            the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the data with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the data with the given `id` and based
            on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Data Update (Single).
      tags:
      - data
  /catalog/ebpf-program/:
    delete:
      description: Delete eBPF program catalogs filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Ebpf program catalogs correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Ebpf program catalogs based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more eBPF program catalogs based
            on the request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program catalog Delete (Multiple).
      tags:
      - ebpf-program-catalog
    get:
      description: Get the list of eBPF program catalogs filtered by the query in
        the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of eBPF program catalogs filtered by the query in the
            request body.
          schema:
            items:
              $ref: '#/definitions/eBPF_Program_Catalog'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Ebpf program catalog based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get eBPF program catalogs with the request
            _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: eBPF program catalog Read (Multiple).
      tags:
      - ebpf-program-catalog
    post:
      description: Create new eBPF program catalogs.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/eBPF_Program_Catalog'
          type: array
      responses:
        '201':
          description: Ebpf program catalog correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create eBPF program catalogs based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more eBPF program catalogs based
            on the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program catalog Creation (Multiple)
      tags:
      - ebpf-program-catalog
    put:
      description: Update eBPF program catalogs.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/eBPF_Program_Catalog'
          type: array
      responses:
        '200':
          description: All Ebpf program catalogs correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update eBPF program catalogs based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more eBPF program catalogs not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more eBPF program catalogs based
            on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program catalog Update (Multiple).
      tags:
      - ebpf-program-catalog
  /catalog/ebpf-program/{id}:
    delete:
      description: Delete the eBPF program catalog with the given `id` and filtered
        by the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Ebpf program catalog with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Ebpf program catalog with the given `id` and based on the request
            query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the eBPF program catalog with the given
            `id` and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program catalog Delete (Single).
      tags:
      - ebpf-program-catalog
    get:
      description: Get the eBPF program catalog with the given `id` and filtered by
        the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Ebpf program catalog with the given `id` and filtered by the
            query in the request body.
          schema:
            items:
              $ref: '#/definitions/eBPF_Program_Catalog'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Ebpf program catalog based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get eBPF program catalogs with the request
            _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program catalog Read (Single).
      tags:
      - ebpf-program-catalog
    post:
      description: Create a new eBPF program catalog with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/eBPF_Program_Catalog'
          type: array
      responses:
        '201':
          description: Ebpf program catalog with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the eBPF program catalog with the given
            `id` and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the eBPF program catalog with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program catalog Create (Single).
      tags:
      - ebpf-program-catalog
    put:
      description: Update the eBPF program catalog with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/eBPF_Program_Catalog'
          type: array
      responses:
        '200':
          description: Ebpf program catalog with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update eBPF program catalogs with the given `id`
            and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the eBPF program catalog with the given `id` not
            necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the eBPF program catalog with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program catalog Update (Single).
      tags:
      - ebpf-program-catalog
  /instance/ebpf-program/:
    delete:
      description: Delete eBPF programs filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Ebpf programs correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Ebpf programs based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more eBPF programs based on the
            request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program Delete (Multiple).
      tags:
      - ebpf-program-instance
    get:
      description: Get the list of eBPF programs filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of eBPF programs filtered by the query in the request
            body.
          schema:
            items:
              $ref: '#/definitions/eBPF_Program_Instance'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Ebpf program based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get eBPF programs with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: eBPF program Read (Multiple).
      tags:
      - ebpf-program-instance
    post:
      description: Create new eBPF programs.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/eBPF_Program_Instance'
          type: array
      responses:
        '201':
          description: Ebpf program correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create eBPF programs based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more eBPF programs based on the
            request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program Creation (Multiple)
      tags:
      - ebpf-program-instance
    put:
      description: Update eBPF programs.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/eBPF_Program_Instance'
          type: array
      responses:
        '200':
          description: All Ebpf programs correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update eBPF programs based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more eBPF programs not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more eBPF programs based on the
            request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program Update (Multiple).
      tags:
      - ebpf-program-instance
  /instance/ebpf-program/{id}:
    delete:
      description: Delete the eBPF program with the given `id` and filtered by the
        query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Ebpf program with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Ebpf program with the given `id` and based on the request query
            not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the eBPF program with the given `id`
            and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program Delete (Single).
      tags:
      - ebpf-program-instance
    get:
      description: Get the eBPF program with the given `id` and filtered by the query
        in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Ebpf program with the given `id` and filtered by the query
            in the request body.
          schema:
            items:
              $ref: '#/definitions/eBPF_Program_Instance'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Ebpf program based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get eBPF programs with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program Read (Single).
      tags:
      - ebpf-program-instance
    post:
      description: Create a new eBPF program with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/eBPF_Program_Instance'
          type: array
      responses:
        '201':
          description: Ebpf program with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the eBPF program with the given `id` and
            based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the eBPF program with the given `id`
            and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program Create (Single).
      tags:
      - ebpf-program-instance
    put:
      description: Update the eBPF program with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/eBPF_Program_Instance'
          type: array
      responses:
        '200':
          description: Ebpf program with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update eBPF programs with the given `id` and
            based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the eBPF program with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the eBPF program with the given `id`
            and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Ebpf program Update (Single).
      tags:
      - ebpf-program-instance
  /event/:
    delete:
      description: Delete event filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Event correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Event based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more event based on the request
            query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Event Delete (Multiple).
      tags:
      - event
    get:
      description: Get the list of event filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of event filtered by the query in the request body.
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Event based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get event with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: event Read (Multiple).
      tags:
      - event
    post:
      description: Create new event.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Event'
          type: array
      responses:
        '201':
          description: Event correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create event based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more event based on the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Event Creation (Multiple)
      tags:
      - event
    put:
      description: Update event.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Event'
          type: array
      responses:
        '200':
          description: All Event correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update event based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more event not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more event based on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Event Update (Multiple).
      tags:
      - event
  /event/{id}:
    delete:
      description: Delete the event with the given `id` and filtered by the query
        in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Event with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Event with the given `id` and based on the request query not
            found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the event with the given `id` and based
            on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Event Delete (Single).
      tags:
      - event
    get:
      description: Get the event with the given `id` and filtered by the query in
        the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Event with the given `id` and filtered by the query in the
            request body.
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Event based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get event with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Event Read (Single).
      tags:
      - event
    post:
      description: Create a new event with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Event'
          type: array
      responses:
        '201':
          description: Event with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the event with the given `id` and based
            on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the event with the given `id` and based
            on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Event Create (Single).
      tags:
      - event
    put:
      description: Update the event with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Event'
          type: array
      responses:
        '200':
          description: Event with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update event with the given `id` and based on
            the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the event with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the event with the given `id` and based
            on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Event Update (Single).
      tags:
      - event
  /exec-env/:
    delete:
      description: Delete execution environments filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Execution environments correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Execution environments based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more execution environments based
            on the request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment Delete (Multiple).
      tags:
      - exec-env
    get:
      description: Get the list of execution environments filtered by the query in
        the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of execution environments filtered by the query in the
            request body.
          schema:
            items:
              $ref: '#/definitions/Exec_Env'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Execution environment based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get execution environments with the request
            _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: execution environment Read (Multiple).
      tags:
      - exec-env
    post:
      description: Create new execution environments.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Exec_Env'
          type: array
      responses:
        '201':
          description: Execution environment correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create execution environments based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more execution environments based
            on the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment Creation (Multiple)
      tags:
      - exec-env
    put:
      description: Update execution environments.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Exec_Env'
          type: array
      responses:
        '200':
          description: All Execution environments correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update execution environments based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more execution environments not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more execution environments based
            on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment Update (Multiple).
      tags:
      - exec-env
  /exec-env/{id}:
    delete:
      description: Delete the execution environment with the given `id` and filtered
        by the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Execution environment with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Execution environment with the given `id` and based on the
            request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the execution environment with the given
            `id` and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment Delete (Single).
      tags:
      - exec-env
    get:
      description: Get the execution environment with the given `id` and filtered
        by the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Execution environment with the given `id` and filtered by the
            query in the request body.
          schema:
            items:
              $ref: '#/definitions/Exec_Env'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Execution environment based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get execution environments with the request
            _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment Read (Single).
      tags:
      - exec-env
    post:
      description: Create a new execution environment with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Exec_Env'
          type: array
      responses:
        '201':
          description: Execution environment with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the execution environment with the given
            `id` and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the execution environment with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment Create (Single).
      tags:
      - exec-env
    put:
      description: Update the execution environment with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Exec_Env'
          type: array
      responses:
        '200':
          description: Execution environment with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update execution environments with the given
            `id` and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the execution environment with the given `id` not
            necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the execution environment with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment Update (Single).
      tags:
      - exec-env
  /type/exec-env/:
    delete:
      description: Delete execution environment types filtered by the query in the
        request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Execution environment types correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Execution environment types based on the request query not
            found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more execution environment types
            based on the request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment type Delete (Multiple).
      tags:
      - exec-env-type
    get:
      description: Get the list of execution environment types filtered by the query
        in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of execution environment types filtered by the query in
            the request body.
          schema:
            items:
              $ref: '#/definitions/Exec_Env_Type'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Execution environment type based on the request _query_ not
            found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get execution environment types with the request
            _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: execution environment type Read (Multiple).
      tags:
      - exec-env-type
    post:
      description: Create new execution environment types.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Exec_Env_Type'
          type: array
      responses:
        '201':
          description: Execution environment type correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create execution environment types based on the
            request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more execution environment types
            based on the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment type Creation (Multiple)
      tags:
      - exec-env-type
    put:
      description: Update execution environment types.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Exec_Env_Type'
          type: array
      responses:
        '200':
          description: All Execution environment types correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update execution environment types based on the
            request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more execution environment types not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more execution environment types
            based on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment type Update (Multiple).
      tags:
      - exec-env-type
  /exec-env-type/{id}:
    delete:
      description: Delete the execution environment type with the given `id` and filtered
        by the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Execution environment type with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Execution environment type with the given `id` and based on
            the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the execution environment type with
            the given `id` and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment type Delete (Single).
      tags:
      - exec-env-type
    get:
      description: Get the execution environment type with the given `id` and filtered
        by the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Execution environment type with the given `id` and filtered
            by the query in the request body.
          schema:
            items:
              $ref: '#/definitions/Exec_Env_Type'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Execution environment type based on the request _query_ not
            found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get execution environment types with the request
            _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment type Read (Single).
      tags:
      - exec-env-type
    post:
      description: Create a new execution environment type with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Exec_Env_Type'
          type: array
      responses:
        '201':
          description: Execution environment type with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the execution environment type with the
            given `id` and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the execution environment type with
            the given `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment type Create (Single).
      tags:
      - exec-env-type
    put:
      description: Update the execution environment type with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Exec_Env_Type'
          type: array
      responses:
        '200':
          description: Execution environment type with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update execution environment types with the given
            `id` and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the execution environment type with the given `id`
            not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the execution environment type with
            the given `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Execution environment type Update (Single).
      tags:
      - exec-env-type
  /network-link/:
    delete:
      description: Delete network links filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Network links correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Network links based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more network links based on the
            request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link Delete (Multiple).
      tags:
      - network-link
    get:
      description: Get the list of network links filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of network links filtered by the query in the request
            body.
          schema:
            items:
              $ref: '#/definitions/Network_Link'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Network link based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get network links with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: network link Read (Multiple).
      tags:
      - network-link
    post:
      description: Create new network links.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Network_Link'
          type: array
      responses:
        '201':
          description: Network link correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create network links based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more network links based on the
            request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link Creation (Multiple)
      tags:
      - network-link
    put:
      description: Update network links.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Network_Link'
          type: array
      responses:
        '200':
          description: All Network links correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update network links based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more network links not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more network links based on the
            request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link Update (Multiple).
      tags:
      - network-link
  /network-link/{id}:
    delete:
      description: Delete the network link with the given `id` and filtered by the
        query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Network link with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Network link with the given `id` and based on the request query
            not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the network link with the given `id`
            and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link Delete (Single).
      tags:
      - network-link
    get:
      description: Get the network link with the given `id` and filtered by the query
        in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Network link with the given `id` and filtered by the query
            in the request body.
          schema:
            items:
              $ref: '#/definitions/Network_Link'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Network link based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get network links with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link Read (Single).
      tags:
      - network-link
    post:
      description: Create a new network link with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Network_Link'
          type: array
      responses:
        '201':
          description: Network link with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the network link with the given `id` and
            based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the network link with the given `id`
            and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link Create (Single).
      tags:
      - network-link
    put:
      description: Update the network link with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Network_Link'
          type: array
      responses:
        '200':
          description: Network link with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update network links with the given `id` and
            based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the network link with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the network link with the given `id`
            and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link Update (Single).
      tags:
      - network-link
  /type/network-link/:
    delete:
      description: Delete network link types filtered by the query in the request
        body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Network link types correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Network link types based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more network link types based
            on the request query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link type Delete (Multiple).
      tags:
      - network-link-type
    get:
      description: Get the list of network link types filtered by the query in the
        request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of network link types filtered by the query in the request
            body.
          schema:
            items:
              $ref: '#/definitions/Network_Link_Type'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Network link type based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get network link types with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: network link type Read (Multiple).
      tags:
      - network-link-type
    post:
      description: Create new network link types.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Network_Link_Type'
          type: array
      responses:
        '201':
          description: Network link type correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create network link types based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more network link types based
            on the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link type Creation (Multiple)
      tags:
      - network-link-type
    put:
      description: Update network link types.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Network_Link_Type'
          type: array
      responses:
        '200':
          description: All Network link types correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update network link types based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more network link types not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more network link types based
            on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link type Update (Multiple).
      tags:
      - network-link-type
  /type/network-link/{id}:
    delete:
      description: Delete the network link type with the given `id` and filtered by
        the query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Network link type with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Network link type with the given `id` and based on the request
            query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the network link type with the given
            `id` and based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link type Delete (Single).
      tags:
      - network-link-type
    get:
      description: Get the network link type with the given `id` and filtered by the
        query in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Network link type with the given `id` and filtered by the query
            in the request body.
          schema:
            items:
              $ref: '#/definitions/Network_Link_Type'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Network link type based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get network link types with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link type Read (Single).
      tags:
      - network-link-type
    post:
      description: Create a new network link type with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Network_Link_Type'
          type: array
      responses:
        '201':
          description: Network link type with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the network link type with the given `id`
            and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the network link type with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link type Create (Single).
      tags:
      - network-link-type
    put:
      description: Update the network link type with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Network_Link_Type'
          type: array
      responses:
        '200':
          description: Network link type with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update network link types with the given `id`
            and based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the network link type with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the network link type with the given
            `id` and based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Network link type Update (Single).
      tags:
      - network-link-type
  /pipeline/:
    delete:
      description: Delete pipeline filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: All Pipeline correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Pipeline based on the request query not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete one or more pipeline based on the request
            query.
          schema:
            items:
              oneOf:
              - Reset_Content_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Pipeline Delete (Multiple).
      tags:
      - pipeline
    get:
      description: Get the list of pipeline filtered by the query in the request body.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: List of pipeline filtered by the query in the request body.
          schema:
            items:
              $ref: '#/definitions/Pipeline'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Pipeline based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get pipeline with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: pipeline Read (Multiple).
      tags:
      - pipeline
    post:
      description: Create new pipeline.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Pipeline'
          type: array
      responses:
        '201':
          description: Pipeline correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create pipeline based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create ore or more pipeline based on the request.
          schema:
            items:
              oneOf:
              - Created_Response_Schema
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Pipeline Creation (Multiple)
      tags:
      - pipeline
    put:
      description: Update pipeline.
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Pipeline'
          type: array
      responses:
        '200':
          description: All Pipeline correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update pipeline based on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update for one or more pipeline not necessary.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update one or more pipeline based on the request.
          schema:
            items:
              oneOf:
              - Ok_Response_Schema
              - Not_Modified_Response
              - Unprocessable_Entity_Response_Schema
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Pipeline Update (Multiple).
      tags:
      - pipeline
  /pipeline/{id}:
    delete:
      description: Delete the pipeline with the given `id` and filtered by the query
        in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '205':
          description: Pipeline with the given `id` correctly deleted.
          schema:
            items:
              $ref: '#/definitions/Reset_Content_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Pipeline with the given `id` and based on the request query
            not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to delete the pipeline with the given `id` and
            based on the request query.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Pipeline Delete (Single).
      tags:
      - pipeline
    get:
      description: Get the pipeline with the given `id` and filtered by the query
        in the request body.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Query_Request'
      responses:
        '200':
          description: Pipeline with the given `id` and filtered by the query in the
            request body.
          schema:
            items:
              $ref: '#/definitions/Pipeline'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '404':
          description: Pipeline based on the request _query_ not found.
          schema:
            $ref: '#/definitions/Not_Found_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to get pipeline with the request _query_.
          schema:
            $ref: '#/definitions/Unprocessable_Entity_Response'
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Pipeline Read (Single).
      tags:
      - pipeline
    post:
      description: Create a new pipeline with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Pipeline'
          type: array
      responses:
        '201':
          description: Pipeline with the given `id` correctly created.
          schema:
            items:
              $ref: '#/definitions/Created_Response'
            type: array
        '204':
          description: No content to create the pipeline with the given `id` and based
            on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to create the pipeline with the given `id` and
            based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Pipeline Create (Single).
      tags:
      - pipeline
    put:
      description: Update the pipeline with the given `id`.
      parameters:
      - in: path
        name: id
        required: true
        type: String
      - in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/Pipeline'
          type: array
      responses:
        '200':
          description: Pipeline with the given `id` correctly updated.
          schema:
            items:
              $ref: '#/definitions/Ok_Response'
            type: array
        '204':
          description: No content to update pipeline with the given `id` and based
            on the request.
          schema:
            $ref: '#/definitions/No_Content_Response'
        '304':
          description: Update of the pipeline with the given `id` not necessary.
          schema:
            items:
              $ref: '#/definitions/Not_Modified_Response'
            type: array
        '400':
          description: Request not valid.
          schema:
            $ref: '#/definitions/Bad_Request_Response'
        '401':
          description: Authentication failed.
          schema:
            $ref: '#/definitions/Unauthorized_Response'
        '406':
          description: Request validation failed.
          schema:
            $ref: '#/definitions/Not_Acceptable_Response'
        '415':
          description: Media type not supported.
          schema:
            $ref: '#/definitions/Unsupported_Media_Type_Response'
        '422':
          description: Not possible to update the pipeline with the given `id` and
            based on the request.
          schema:
            items:
              $ref: '#/definitions/Unprocessable_Entity_Response'
            type: array
        '500':
          description: Server not available to satisfy the request.
          schema:
            $ref: '#/definitions/Internal_Server_Error_Response'
      summary: Pipeline Update (Single).
      tags:
      - pipeline
produces:
- application/json
swagger: '2.0'
tags:
- description: Represents an agent in the catalog.
  name: agent-catalog
- description: Represents an agent in the catalog.
  name: agent-catalog
- description: Represents an agent instance installed in an execution environment.
  name: agent-instance
- description: Represents an agent instance installed in an execution environment.
  name: agent-instance
- description: Represents an algorithm in the catalog.
  name: algorithm-catalog
- description: Represents an algorithm in the catalog.
  name: algorithm-catalog
- description: Represents an algorithm instance.
  name: algorithm-instance
- description: Represents an algorithm instance.
  name: algorithm-instance
- description: Represents an connection between execution environments and network
    links.
  name: connection
- description: Represents an connection between execution environments and network
    links.
  name: connection
- []
- description: Represents the stored data.
  name: data
- description: Represents the stored data.
  name: data
- description: Represents an eBPF program in the catalog.
  name: ebpf-program-catalog
- description: Represents an eBPF program in the catalog.
  name: ebpf-program-catalog
- description: Represents an eBPF program instance installed in an execution environment.
  name: ebpf-program-instance
- description: Represents an eBPF program instance installed in an execution environment.
  name: ebpf-program-instance
- description: Represents the stored events.
  name: event
- description: Represents the stored events.
  name: event
- description: Represents an execution environment.
  name: exec-env
- description: Represents an execution environment.
  name: exec-env
- description: Represents an execution environment type.
  name: exec-env-type
- description: Represents an execution environment type.
  name: exec-env-type
- description: Represents a network link.
  name: network-link
- description: Represents a network link.
  name: network-link
- description: Represents a network link type.
  name: network-link-type
- description: Represents a network link type.
  name: network-link-type
- description: Represents the stored pipelines.
  name: pipeline
- description: Represents the stored pipelines.
  name: pipeline
